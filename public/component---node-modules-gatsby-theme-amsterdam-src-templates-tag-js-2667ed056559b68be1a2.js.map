{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-amsterdam/src/templates/tag.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/BasicGrid.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/ListGrid.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/PostList.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/Intro.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/Button.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/icons/SelectIcon.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/Pagination.js"],"names":["TagPage","ogImage","data","pageContext","posts","allPost","edges","node","cover","childImageSharp","ogimg","src","error","title","startCase","tag","description","image","fullWidth","noPadding","text","context","capitalize","length","tagQuery","_","require","List","props","theme","sizes","maxWidth","Cover","Img","Item","responsive","small","colors","tertiary","highlight","Title","fonts","boldWeight","Excerpt","secondary","Container","Divider","border","Date","Tag","BasicGrid","map","post","key","to","slug","fluid","aspectRatio","alt","Placeholder","excerpt","date","tags","basePath","kebabCase","base","ImageContainer","TextContainer","AdditionalContainer","ListGrid","PostList","useContext","OptionsContext","grid","Wrapper","medium","Intro","humanPageNumber","Link","button","Button","children","SVG","SelectIcon","viewBox","d","Numbers","Select","Pagination","numberOfPages","value","onChange","e","navigate","target","paginationPath","Array","from","i","previousPagePath","nextPagePath","style","order"],"mappings":"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","file":"component---node-modules-gatsby-theme-amsterdam-src-templates-tag-js-2667ed056559b68be1a2.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Intro from '../components/Intro'\nimport PostList from '../components/PostList'\nimport SEO from '../components/SEO'\nimport Pagination from '../components/Pagination'\nimport Container from '../components/Container'\nimport { startCase } from 'lodash'\n\nconst TagPage = ({ data, pageContext }) => {\n  const posts = data.allPost.edges\n\n  let ogImage\n  try {\n    ogImage = posts[0].node.cover.childImageSharp.ogimg.src\n  } catch (error) {\n    ogImage = null\n  }\n\n  return (\n    <>\n      <SEO\n        title={`Tag: ${startCase(pageContext.tag)}`}\n        description={`Posts Tagged: ${startCase(pageContext.tag)}`}\n        image={ogImage}\n      />\n      <Container fullWidth noPadding>\n        <Intro\n          text={`Tagged: ${pageContext.tag}`}\n          context={pageContext}\n          capitalize\n        />\n        {posts.length > 0 && <PostList posts={posts} context={pageContext} />}\n      </Container>\n      <Pagination context={pageContext} />\n    </>\n  )\n}\n\nexport default TagPage\n\nexport const tagQuery = graphql`\n  query($skip: Int!, $limit: Int!, $tag: String) {\n    allPost(\n      sort: { fields: [date], order: DESC }\n      skip: $skip\n      limit: $limit\n      filter: { tags: { in: [$tag] } }\n    ) {\n      edges {\n        node {\n          slug\n          excerpt\n          title\n          tags\n          date(formatString: \"MMMM DD, YYYY\")\n          cover {\n            childImageSharp {\n              fluid(maxWidth: 1000) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n              ogimg: resize(width: 1000) {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Img from 'gatsby-image'\nimport Placeholder from './Placeholder'\nconst _ = require(`lodash`)\n\nconst List = styled.ul`\n  margin: 3rem auto;\n  max-width: ${props => props.theme.sizes.maxWidth};\n  padding: 0 1.5rem;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n`\n\nconst Cover = styled(Img)`\n  transition: opacity 0.4s;\n  img {\n    transition: transform 0.6s !important;\n  }\n  &:hover {\n    opacity: 0.8;\n    img {\n      transform: scale(1.03);\n    }\n  }\n  @media (hover: none) {\n    opacity: 1 !important;\n    img {\n      transform: scale(1) !important;\n    }\n  }\n`\n\nconst Item = styled.li`\n  position: relative;\n  display: inline-block;\n  flex: 0 100%;\n  margin: 0 0 2rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    flex: 0 49%;\n  }\n  a {\n    text-decoration: none;\n    transition: color 0.3s;\n    color: ${props => props.theme.colors.tertiary};\n    &:hover {\n      color: ${props => props.theme.colors.highlight};\n    }\n    @media (hover: none) {\n      color: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst Title = styled.h2`\n  transition: color 0.3s;\n  color: ${props => props.theme.colors.text};\n  font-weight: ${props => props.theme.fonts.boldWeight};\n  margin: 1rem 0 0 0;\n  display: block;\n  line-height: 1.25;\n  font-size: 1rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    font-size: 1.1rem;\n  }\n  &:hover {\n    color: ${props => props.theme.colors.highlight};\n  }\n  @media (hover: none) {\n    color: ${props => props.theme.colors.text} !important;\n  }\n`\n\nconst Excerpt = styled.p`\n  padding: 0.5rem 0 0 0;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.secondary};\n`\n\nconst Container = styled.div`\n  padding: 1rem 0 0;\n  line-height: 1.5;\n  font-size: 0.9em;\n`\n\nconst Divider = styled.span`\n  margin: 0 0.25rem;\n  color: ${props => props.theme.colors.border};\n`\n\nconst Date = styled.span`\n  display: inline-block;\n  color: ${props => props.theme.colors.tertiary};\n`\n\nconst Tag = styled.span`\n  display: inline-block;\n  margin: 0 0.5rem 0 0;\n  text-transform: capitalize;\n  a {\n    text-decoration: underline;\n    color: ${props => props.theme.colors.tertiary};\n    @media (hover: none) {\n      color: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst BasicGrid = props => {\n  return (\n    <List>\n      {props.posts.map(({ node: post }) => (\n        <Item key={post.title}>\n          <Link to={post.slug}>\n            {post.cover && (\n              <Cover\n                sizes={{\n                  ...post.cover.childImageSharp.fluid,\n                  aspectRatio: 5 / 3,\n                }}\n                alt={post.cover.childImageSharp.title}\n              />\n            )}\n            {post.cover === null ? <Placeholder aspectRatio={5 / 3} /> : ''}\n          </Link>\n          <Link to={post.slug}>\n            <Title>{post.title}</Title>\n            <Excerpt>{post.excerpt}</Excerpt>\n          </Link>\n          <Container>\n            {post.date && <Date>{post.date}</Date>}\n            {post.tags && (\n              <>\n                <Divider>/</Divider>\n                {post.tags.map(tag => (\n                  <Tag key={tag}>\n                    <Link\n                      to={`${props.context.basePath}/tag/${_.kebabCase(tag)}/`}\n                    >\n                      {tag}\n                    </Link>\n                  </Tag>\n                ))}\n              </>\n            )}\n          </Container>\n        </Item>\n      ))}\n    </List>\n  )\n}\n\nexport default BasicGrid\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Img from 'gatsby-image'\nimport Placeholder from './Placeholder'\nconst _ = require(`lodash`)\n\nconst List = styled.ul`\n  margin: 3rem auto;\n  max-width: ${props => props.theme.sizes.maxWidth};\n  padding: 0 1.5rem;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  li:first-of-type {\n    border: 0;\n    padding-top: 0;\n  }\n  li:last-of-type {\n    padding-bottom: 0;\n    margin-bottom: 2rem;\n  }\n`\n\nconst Cover = styled(Img)`\n  transition: opacity 0.4s;\n  img {\n    transition: transform 0.6s !important;\n  }\n  &:hover {\n    opacity: 0.8;\n    img {\n      transform: scale(1.03);\n    }\n  }\n  @media (hover: none) {\n    opacity: 1 !important;\n    img {\n      transform: scale(1) !important;\n    }\n  }\n`\n\nconst Item = styled.li`\n  position: relative;\n  display: inline-block;\n  flex: 0 100%;\n  margin: 0 0 2rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    margin: 0;\n    width: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    padding: 2rem 0;\n    border-top: 1px solid ${props => props.theme.colors.border};\n  }\n  a {\n    text-decoration: none;\n    transition: color 0.3s;\n    color: ${props => props.theme.colors.base};\n    &:hover {\n      color: ${props => props.theme.colors.highlight};\n    }\n    @media (hover: none) {\n      color: ${props => props.theme.colors.base} !important;\n    }\n  }\n`\n\nconst Title = styled.h2`\n  font-weight: ${props => props.theme.fonts.boldWeight};\n  padding: 0.5rem 0 0 0;\n  display: block;\n  line-height: 1.25;\n  font-size: 1rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    font-size: 1.1rem;\n    padding: 0;\n  }\n`\n\nconst Excerpt = styled.p`\n  padding: 0.5rem 0 0 0;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.secondary};\n`\n\nconst ImageContainer = styled.div`\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    flex: 0 34%;\n  }\n`\n\nconst TextContainer = styled.div`\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    padding: 0 0 0 2rem;\n    flex: 0 66%;\n  }\n`\n\nconst AdditionalContainer = styled.div`\n  padding: 1rem 0 0;\n  line-height: 1.5;\n  font-size: 0.9em;\n`\n\nconst Divider = styled.span`\n  margin: 0 0.25rem;\n  color: ${props => props.theme.colors.border};\n`\n\nconst Date = styled.span`\n  display: inline-block;\n  color: ${props => props.theme.colors.tertiary};\n`\n\nconst Tag = styled.span`\n  display: inline-block;\n  margin: 0 0.5rem 0 0;\n  text-transform: capitalize;\n  a {\n    text-decoration: underline;\n    color: ${props => props.theme.colors.tertiary};\n    @media (hover: none) {\n      color: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst ListGrid = props => {\n  return (\n    <List>\n      {props.posts.map(({ node: post }) => (\n        <Item key={post.title}>\n          <ImageContainer>\n            <Link to={post.slug}>\n              {post.cover && (\n                <Cover\n                  sizes={{\n                    ...post.cover.childImageSharp.fluid,\n                    aspectRatio: 2 / 1,\n                  }}\n                  alt={post.cover.childImageSharp.title}\n                />\n              )}\n              {post.cover === null ? <Placeholder aspectRatio={2 / 1} /> : ''}\n            </Link>\n          </ImageContainer>\n          <TextContainer>\n            <Link to={post.slug}>\n              <Title>{post.title}</Title>\n              <Excerpt>{post.excerpt}</Excerpt>\n            </Link>\n            <AdditionalContainer>\n              {post.date && <Date>{post.date}</Date>}\n              {post.tags && (\n                <>\n                  <Divider>/</Divider>\n                  {post.tags.map(tag => (\n                    <Tag key={tag}>\n                      <Link\n                        to={`${props.context.basePath}/tag/${_.kebabCase(\n                          tag\n                        )}/`}\n                      >\n                        {tag}\n                      </Link>\n                    </Tag>\n                  ))}\n                </>\n              )}\n            </AdditionalContainer>\n          </TextContainer>\n        </Item>\n      ))}\n    </List>\n  )\n}\n\nexport default ListGrid\n","import React, { useContext } from 'react'\nimport BasicGrid from './BasicGrid'\nimport ListGrid from './ListGrid'\nimport OptionsContext from './OptionsContext'\n\nconst PostList = props => {\n  const options = useContext(OptionsContext)\n\n  if (options.grid === 'list') {\n    return <ListGrid {...props} />\n  }\n  return <BasicGrid {...props} />\n}\n\nexport default PostList\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Wrapper = styled.div`\n  max-width: ${props => props.theme.sizes.maxWidth};\n  width: 100%;\n  margin: 3rem auto 0;\n  padding: 0 1.5rem;\n  text-transform: ${props => (props.capitalize ? 'capitalize' : 'none')};\n`\n\nconst Title = styled.h2`\n  line-height: 1.25;\n  text-align: left;\n  font-size: 2em;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    font-size: 2.5em;\n  }\n  @media screen and (min-width: ${props => props.theme.responsive.medium}) {\n    max-width: 80%;\n  }\n`\n\nconst Intro = props => {\n  return (\n    <>\n      {props.context.humanPageNumber === 1 && (\n        <Wrapper {...props}>\n          <Title>{props.text}</Title>\n        </Wrapper>\n      )}\n    </>\n  )\n}\n\nexport default Intro\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nconst Wrapper = styled(Link)`\n  background: ${props => props.theme.colors.button};\n  border: 1px solid ${props => props.theme.colors.border};\n  color: ${props => props.theme.colors.secondary};\n  padding: 0.5rem;\n  border-radius: 2px;\n  margin: 0 0 0 0.5rem;\n  cursor: pointer;\n  text-decoration: none;\n  transition: 0.3s all;\n  span {\n    transition: 0.3s all;\n    color: ${props => props.theme.colors.tertiary};\n  }\n  &:hover {\n    background: ${props => props.theme.colors.highlight};\n    border-color: ${props => props.theme.colors.highlight};\n    color: white;\n    span {\n      color: white;\n    }\n  }\n  @media (hover: none) {\n    background: ${props => props.theme.colors.button} !important;\n    color: ${props => props.theme.colors.secondary} !important;\n    border-color: ${props => props.theme.colors.border} !important;\n    span {\n      color: ${props => props.theme.colors.tertiary};\n    }\n  }\n`\n\nconst Button = props => {\n  return <Wrapper {...props}>{props.children}</Wrapper>\n}\n\nexport default Button\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst SVG = styled.svg`\n  padding: 0;\n  width: 0.6rem;\n  fill: ${props => props.theme.colors.tertiary};\n`\n\nconst SelectIcon = props => {\n  return (\n    <SVG viewBox=\"0 0 292.362 292.362\">\n      <path\n        d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\n  C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\n  s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\n      />\n    </SVG>\n  )\n}\n\nexport default SelectIcon\n","import React from 'react'\nimport { navigate } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Button from './Button'\nimport SelectIcon from '../icons/SelectIcon'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin: -2.5rem auto 2.5rem;\n  max-width: ${props => props.theme.sizes.maxWidth};\n  padding: 0 1.5rem;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: baseline;\n`\n\nconst Numbers = styled.div`\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: 2px;\n  display: inline-block;\n  float: left;\n  color: ${props => props.theme.colors.secondary};\n  padding: 0.5rem;\n  background: ${props => props.theme.colors.button};\n  position: relative;\n  transition: 0.3s all;\n  svg {\n    margin: 0 0 0 0.25rem;\n    transition: 0.3s all;\n  }\n  &:hover {\n    background: ${props => props.theme.colors.highlight};\n    border-color: ${props => props.theme.colors.highlight};\n    color: white;\n    svg {\n      fill: white;\n    }\n  }\n  @media (hover: none) {\n    background: ${props => props.theme.colors.button} !important;\n    color: ${props => props.theme.colors.secondary} !important;\n    border-color: ${props => props.theme.colors.border} !important;\n    svg {\n      fill: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst Select = styled.select`\n  cursor: pointer;\n  position: absolute;\n  width: 100%;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  color: transparent;\n  option {\n    color: black;\n  }\n`\n\nconst Pagination = props => {\n  function changePage(e) {\n    navigate(\n      e.target.value\n        ? `${props.context.paginationPath}/${e.target.value}`\n        : `${props.context.paginationPath}/`\n    )\n  }\n\n  return (\n    <>\n      {props.context.numberOfPages > 1 && (\n        <Wrapper>\n          <Numbers>\n            {props.context.humanPageNumber}{' '}\n            <Select\n              value={\n                props.context.humanPageNumber === 1\n                  ? ``\n                  : props.context.humanPageNumber\n              }\n              onChange={changePage}\n            >\n              {Array.from({ length: props.context.numberOfPages }, (_, i) => (\n                <option value={`${i === 0 ? `` : i + 1}`} key={`page${i + 1}`}>\n                  {i + 1}\n                </option>\n              ))}\n            </Select>\n            / {props.context.numberOfPages} <SelectIcon />\n          </Numbers>\n          <div>\n            {props.context.previousPagePath && (\n              <Button to={`${props.context.previousPagePath}`}>\n                <span>&larr;</span> Prev\n              </Button>\n            )}\n            {props.context.nextPagePath && (\n              <Button style={{ order: 3 }} to={`${props.context.nextPagePath}`}>\n                Next <span>&rarr;</span>\n              </Button>\n            )}\n          </div>\n        </Wrapper>\n      )}\n    </>\n  )\n}\n\nexport default Pagination\n"],"sourceRoot":""}