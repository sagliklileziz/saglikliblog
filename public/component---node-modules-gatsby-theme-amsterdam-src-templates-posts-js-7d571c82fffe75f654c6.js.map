{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-amsterdam/src/templates/posts.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/BasicGrid.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/ListGrid.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/PostList.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/Intro.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/Button.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/icons/SelectIcon.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/Pagination.js"],"names":["PostsPage","ogImage","data","pageContext","intro","useSiteMetadata","posts","allPost","edges","node","cover","childImageSharp","ogimg","src","error","image","title","startCase","basePath","fullWidth","noPadding","text","context","length","postsQuery","_","require","List","props","theme","sizes","maxWidth","Cover","Img","Item","responsive","small","colors","tertiary","highlight","Title","fonts","boldWeight","Excerpt","secondary","Container","Divider","border","Date","Tag","BasicGrid","map","post","key","to","slug","fluid","aspectRatio","alt","Placeholder","excerpt","date","tags","tag","kebabCase","base","ImageContainer","TextContainer","AdditionalContainer","ListGrid","PostList","useContext","OptionsContext","grid","Wrapper","capitalize","medium","Intro","humanPageNumber","Link","button","Button","children","SVG","SelectIcon","viewBox","d","Numbers","Select","Pagination","numberOfPages","value","onChange","e","navigate","target","paginationPath","Array","from","i","previousPagePath","nextPagePath","style","order"],"mappings":"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","file":"component---node-modules-gatsby-theme-amsterdam-src-templates-posts-js-7d571c82fffe75f654c6.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Intro from '../components/Intro'\nimport PostList from '../components/PostList'\nimport SEO from '../components/SEO'\nimport Pagination from '../components/Pagination'\nimport Container from '../components/Container'\nimport { useSiteMetadata } from '../hooks/use-site-metadata'\nimport { startCase } from 'lodash'\n\nconst PostsPage = ({ data, pageContext }) => {\n  const { intro } = useSiteMetadata()\n  const posts = data.allPost.edges\n\n  let ogImage\n  try {\n    ogImage = posts[0].node.cover.childImageSharp.ogimg.src\n  } catch (error) {\n    ogImage = null\n  }\n\n  return (\n    <>\n      <SEO image={ogImage} title={startCase(pageContext.basePath)} />\n      <Container fullWidth noPadding>\n        {intro && <Intro text={intro} context={pageContext} />}\n        {posts.length > 0 && <PostList posts={posts} context={pageContext} />}\n      </Container>\n      <Pagination context={pageContext} />\n    </>\n  )\n}\n\nexport default PostsPage\n\nexport const postsQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allPost(sort: { fields: [date], order: DESC }, skip: $skip, limit: $limit) {\n      edges {\n        node {\n          slug\n          excerpt\n          title\n          tags\n          date(formatString: \"MMMM DD, YYYY\")\n          cover {\n            childImageSharp {\n              fluid(maxWidth: 1000) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n              ogimg: resize(width: 1000) {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Img from 'gatsby-image'\nimport Placeholder from './Placeholder'\nconst _ = require(`lodash`)\n\nconst List = styled.ul`\n  margin: 3rem auto;\n  max-width: ${props => props.theme.sizes.maxWidth};\n  padding: 0 1.5rem;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n`\n\nconst Cover = styled(Img)`\n  transition: opacity 0.4s;\n  img {\n    transition: transform 0.6s !important;\n  }\n  &:hover {\n    opacity: 0.8;\n    img {\n      transform: scale(1.03);\n    }\n  }\n  @media (hover: none) {\n    opacity: 1 !important;\n    img {\n      transform: scale(1) !important;\n    }\n  }\n`\n\nconst Item = styled.li`\n  position: relative;\n  display: inline-block;\n  flex: 0 100%;\n  margin: 0 0 2rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    flex: 0 49%;\n  }\n  a {\n    text-decoration: none;\n    transition: color 0.3s;\n    color: ${props => props.theme.colors.tertiary};\n    &:hover {\n      color: ${props => props.theme.colors.highlight};\n    }\n    @media (hover: none) {\n      color: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst Title = styled.h2`\n  transition: color 0.3s;\n  color: ${props => props.theme.colors.text};\n  font-weight: ${props => props.theme.fonts.boldWeight};\n  margin: 1rem 0 0 0;\n  display: block;\n  line-height: 1.25;\n  font-size: 1rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    font-size: 1.1rem;\n  }\n  &:hover {\n    color: ${props => props.theme.colors.highlight};\n  }\n  @media (hover: none) {\n    color: ${props => props.theme.colors.text} !important;\n  }\n`\n\nconst Excerpt = styled.p`\n  padding: 0.5rem 0 0 0;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.secondary};\n`\n\nconst Container = styled.div`\n  padding: 1rem 0 0;\n  line-height: 1.5;\n  font-size: 0.9em;\n`\n\nconst Divider = styled.span`\n  margin: 0 0.25rem;\n  color: ${props => props.theme.colors.border};\n`\n\nconst Date = styled.span`\n  display: inline-block;\n  color: ${props => props.theme.colors.tertiary};\n`\n\nconst Tag = styled.span`\n  display: inline-block;\n  margin: 0 0.5rem 0 0;\n  text-transform: capitalize;\n  a {\n    text-decoration: underline;\n    color: ${props => props.theme.colors.tertiary};\n    @media (hover: none) {\n      color: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst BasicGrid = props => {\n  return (\n    <List>\n      {props.posts.map(({ node: post }) => (\n        <Item key={post.title}>\n          <Link to={post.slug}>\n            {post.cover && (\n              <Cover\n                sizes={{\n                  ...post.cover.childImageSharp.fluid,\n                  aspectRatio: 5 / 3,\n                }}\n                alt={post.cover.childImageSharp.title}\n              />\n            )}\n            {post.cover === null ? <Placeholder aspectRatio={5 / 3} /> : ''}\n          </Link>\n          <Link to={post.slug}>\n            <Title>{post.title}</Title>\n            <Excerpt>{post.excerpt}</Excerpt>\n          </Link>\n          <Container>\n            {post.date && <Date>{post.date}</Date>}\n            {post.tags && (\n              <>\n                <Divider>/</Divider>\n                {post.tags.map(tag => (\n                  <Tag key={tag}>\n                    <Link\n                      to={`${props.context.basePath}/tag/${_.kebabCase(tag)}/`}\n                    >\n                      {tag}\n                    </Link>\n                  </Tag>\n                ))}\n              </>\n            )}\n          </Container>\n        </Item>\n      ))}\n    </List>\n  )\n}\n\nexport default BasicGrid\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Img from 'gatsby-image'\nimport Placeholder from './Placeholder'\nconst _ = require(`lodash`)\n\nconst List = styled.ul`\n  margin: 3rem auto;\n  max-width: ${props => props.theme.sizes.maxWidth};\n  padding: 0 1.5rem;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  li:first-of-type {\n    border: 0;\n    padding-top: 0;\n  }\n  li:last-of-type {\n    padding-bottom: 0;\n    margin-bottom: 2rem;\n  }\n`\n\nconst Cover = styled(Img)`\n  transition: opacity 0.4s;\n  img {\n    transition: transform 0.6s !important;\n  }\n  &:hover {\n    opacity: 0.8;\n    img {\n      transform: scale(1.03);\n    }\n  }\n  @media (hover: none) {\n    opacity: 1 !important;\n    img {\n      transform: scale(1) !important;\n    }\n  }\n`\n\nconst Item = styled.li`\n  position: relative;\n  display: inline-block;\n  flex: 0 100%;\n  margin: 0 0 2rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    margin: 0;\n    width: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    padding: 2rem 0;\n    border-top: 1px solid ${props => props.theme.colors.border};\n  }\n  a {\n    text-decoration: none;\n    transition: color 0.3s;\n    color: ${props => props.theme.colors.base};\n    &:hover {\n      color: ${props => props.theme.colors.highlight};\n    }\n    @media (hover: none) {\n      color: ${props => props.theme.colors.base} !important;\n    }\n  }\n`\n\nconst Title = styled.h2`\n  font-weight: ${props => props.theme.fonts.boldWeight};\n  padding: 0.5rem 0 0 0;\n  display: block;\n  line-height: 1.25;\n  font-size: 1rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    font-size: 1.1rem;\n    padding: 0;\n  }\n`\n\nconst Excerpt = styled.p`\n  padding: 0.5rem 0 0 0;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.secondary};\n`\n\nconst ImageContainer = styled.div`\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    flex: 0 34%;\n  }\n`\n\nconst TextContainer = styled.div`\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    padding: 0 0 0 2rem;\n    flex: 0 66%;\n  }\n`\n\nconst AdditionalContainer = styled.div`\n  padding: 1rem 0 0;\n  line-height: 1.5;\n  font-size: 0.9em;\n`\n\nconst Divider = styled.span`\n  margin: 0 0.25rem;\n  color: ${props => props.theme.colors.border};\n`\n\nconst Date = styled.span`\n  display: inline-block;\n  color: ${props => props.theme.colors.tertiary};\n`\n\nconst Tag = styled.span`\n  display: inline-block;\n  margin: 0 0.5rem 0 0;\n  text-transform: capitalize;\n  a {\n    text-decoration: underline;\n    color: ${props => props.theme.colors.tertiary};\n    @media (hover: none) {\n      color: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst ListGrid = props => {\n  return (\n    <List>\n      {props.posts.map(({ node: post }) => (\n        <Item key={post.title}>\n          <ImageContainer>\n            <Link to={post.slug}>\n              {post.cover && (\n                <Cover\n                  sizes={{\n                    ...post.cover.childImageSharp.fluid,\n                    aspectRatio: 2 / 1,\n                  }}\n                  alt={post.cover.childImageSharp.title}\n                />\n              )}\n              {post.cover === null ? <Placeholder aspectRatio={2 / 1} /> : ''}\n            </Link>\n          </ImageContainer>\n          <TextContainer>\n            <Link to={post.slug}>\n              <Title>{post.title}</Title>\n              <Excerpt>{post.excerpt}</Excerpt>\n            </Link>\n            <AdditionalContainer>\n              {post.date && <Date>{post.date}</Date>}\n              {post.tags && (\n                <>\n                  <Divider>/</Divider>\n                  {post.tags.map(tag => (\n                    <Tag key={tag}>\n                      <Link\n                        to={`${props.context.basePath}/tag/${_.kebabCase(\n                          tag\n                        )}/`}\n                      >\n                        {tag}\n                      </Link>\n                    </Tag>\n                  ))}\n                </>\n              )}\n            </AdditionalContainer>\n          </TextContainer>\n        </Item>\n      ))}\n    </List>\n  )\n}\n\nexport default ListGrid\n","import React, { useContext } from 'react'\nimport BasicGrid from './BasicGrid'\nimport ListGrid from './ListGrid'\nimport OptionsContext from './OptionsContext'\n\nconst PostList = props => {\n  const options = useContext(OptionsContext)\n\n  if (options.grid === 'list') {\n    return <ListGrid {...props} />\n  }\n  return <BasicGrid {...props} />\n}\n\nexport default PostList\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Wrapper = styled.div`\n  max-width: ${props => props.theme.sizes.maxWidth};\n  width: 100%;\n  margin: 3rem auto 0;\n  padding: 0 1.5rem;\n  text-transform: ${props => (props.capitalize ? 'capitalize' : 'none')};\n`\n\nconst Title = styled.h2`\n  line-height: 1.25;\n  text-align: left;\n  font-size: 2em;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    font-size: 2.5em;\n  }\n  @media screen and (min-width: ${props => props.theme.responsive.medium}) {\n    max-width: 80%;\n  }\n`\n\nconst Intro = props => {\n  return (\n    <>\n      {props.context.humanPageNumber === 1 && (\n        <Wrapper {...props}>\n          <Title>{props.text}</Title>\n        </Wrapper>\n      )}\n    </>\n  )\n}\n\nexport default Intro\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nconst Wrapper = styled(Link)`\n  background: ${props => props.theme.colors.button};\n  border: 1px solid ${props => props.theme.colors.border};\n  color: ${props => props.theme.colors.secondary};\n  padding: 0.5rem;\n  border-radius: 2px;\n  margin: 0 0 0 0.5rem;\n  cursor: pointer;\n  text-decoration: none;\n  transition: 0.3s all;\n  span {\n    transition: 0.3s all;\n    color: ${props => props.theme.colors.tertiary};\n  }\n  &:hover {\n    background: ${props => props.theme.colors.highlight};\n    border-color: ${props => props.theme.colors.highlight};\n    color: white;\n    span {\n      color: white;\n    }\n  }\n  @media (hover: none) {\n    background: ${props => props.theme.colors.button} !important;\n    color: ${props => props.theme.colors.secondary} !important;\n    border-color: ${props => props.theme.colors.border} !important;\n    span {\n      color: ${props => props.theme.colors.tertiary};\n    }\n  }\n`\n\nconst Button = props => {\n  return <Wrapper {...props}>{props.children}</Wrapper>\n}\n\nexport default Button\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst SVG = styled.svg`\n  padding: 0;\n  width: 0.6rem;\n  fill: ${props => props.theme.colors.tertiary};\n`\n\nconst SelectIcon = props => {\n  return (\n    <SVG viewBox=\"0 0 292.362 292.362\">\n      <path\n        d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\n  C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\n  s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\n      />\n    </SVG>\n  )\n}\n\nexport default SelectIcon\n","import React from 'react'\nimport { navigate } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Button from './Button'\nimport SelectIcon from '../icons/SelectIcon'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin: -2.5rem auto 2.5rem;\n  max-width: ${props => props.theme.sizes.maxWidth};\n  padding: 0 1.5rem;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: baseline;\n`\n\nconst Numbers = styled.div`\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: 2px;\n  display: inline-block;\n  float: left;\n  color: ${props => props.theme.colors.secondary};\n  padding: 0.5rem;\n  background: ${props => props.theme.colors.button};\n  position: relative;\n  transition: 0.3s all;\n  svg {\n    margin: 0 0 0 0.25rem;\n    transition: 0.3s all;\n  }\n  &:hover {\n    background: ${props => props.theme.colors.highlight};\n    border-color: ${props => props.theme.colors.highlight};\n    color: white;\n    svg {\n      fill: white;\n    }\n  }\n  @media (hover: none) {\n    background: ${props => props.theme.colors.button} !important;\n    color: ${props => props.theme.colors.secondary} !important;\n    border-color: ${props => props.theme.colors.border} !important;\n    svg {\n      fill: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst Select = styled.select`\n  cursor: pointer;\n  position: absolute;\n  width: 100%;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  color: transparent;\n  option {\n    color: black;\n  }\n`\n\nconst Pagination = props => {\n  function changePage(e) {\n    navigate(\n      e.target.value\n        ? `${props.context.paginationPath}/${e.target.value}`\n        : `${props.context.paginationPath}/`\n    )\n  }\n\n  return (\n    <>\n      {props.context.numberOfPages > 1 && (\n        <Wrapper>\n          <Numbers>\n            {props.context.humanPageNumber}{' '}\n            <Select\n              value={\n                props.context.humanPageNumber === 1\n                  ? ``\n                  : props.context.humanPageNumber\n              }\n              onChange={changePage}\n            >\n              {Array.from({ length: props.context.numberOfPages }, (_, i) => (\n                <option value={`${i === 0 ? `` : i + 1}`} key={`page${i + 1}`}>\n                  {i + 1}\n                </option>\n              ))}\n            </Select>\n            / {props.context.numberOfPages} <SelectIcon />\n          </Numbers>\n          <div>\n            {props.context.previousPagePath && (\n              <Button to={`${props.context.previousPagePath}`}>\n                <span>&larr;</span> Prev\n              </Button>\n            )}\n            {props.context.nextPagePath && (\n              <Button style={{ order: 3 }} to={`${props.context.nextPagePath}`}>\n                Next <span>&rarr;</span>\n              </Button>\n            )}\n          </div>\n        </Wrapper>\n      )}\n    </>\n  )\n}\n\nexport default Pagination\n"],"sourceRoot":""}